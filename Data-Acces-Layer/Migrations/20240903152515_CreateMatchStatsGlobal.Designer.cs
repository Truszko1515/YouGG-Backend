// <auto-generated />
using System;
using Data_Acces_Layer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Acces_Layer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240903152515_CreateMatchStatsGlobal")]
    partial class CreateMatchStatsGlobal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data_Acces_Layer.Models.LaneAverageMinionsGlobal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("AverageMonstersKilled")
                        .HasColumnType("real");

                    b.Property<string>("LaneName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(15)");

                    b.HasKey("Id");

                    b.ToTable("LaneAverageMinionsGlobal");
                });

            modelBuilder.Entity("Data_Acces_Layer.Models.MatchStatisticGlobal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Assists")
                        .HasColumnType("int");

                    b.Property<string>("ChampionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ControlWardsPlaced")
                        .HasColumnType("int");

                    b.Property<int>("Deaths")
                        .HasColumnType("int");

                    b.Property<string>("GameLength")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kills")
                        .HasColumnType("int");

                    b.Property<string>("MatchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinionsFirst10Minutes")
                        .HasColumnType("int");

                    b.Property<string>("TeamPosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("MatchesStatisticsGlobal");
                });

            modelBuilder.Entity("Data_Acces_Layer.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Data_Acces_Layer.Models.SummonerDataExpiration", b =>
                {
                    b.Property<string>("SummonerName")
                        .HasMaxLength(35)
                        .HasColumnType("NVARCHAR(35)");

                    b.Property<DateTime>("NextTimeAllowed")
                        .HasColumnType("datetime2");

                    b.HasKey("SummonerName");

                    b.ToTable("SummonerDataExpiration");
                });

            modelBuilder.Entity("Data_Acces_Layer.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data_Acces_Layer.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Data_Acces_Layer.Models.UserRole", b =>
                {
                    b.HasOne("Data_Acces_Layer.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Acces_Layer.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
